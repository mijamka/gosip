<!-- BOOTSTRAP TEMP: https://colorlib.com/wp/template/bootstrap-sidebar-01/ -->

<!-- Include the header partial -->
<%- include('../partials/header.ejs') %>
    <%- include('../partials/header_admin.ejs') %>
        </head>

        <!-- Body -->

        <body>

            <!-- Include navigation -->
            <%- include('../partials/nav_admin.ejs') %>

                <!-- Header -->
                <h2 class="mb-4">Statistics</h2>


                <!-- Number of visits per age group -->
                <!-- The AB testing results showing how many users in both age groups visited the portal -->
                <div>
                    <h4>Number of visits per age group</h4>

                    <!-- Canvas for the graph -->
                    <canvas id='age_chart' height="60%"></canvas>
                </div>

                <!-- Timeline showing number of daily visits by both age groups -->
                <div>
                    <h4>Number of visits for each age group over time</h4>

                    <!-- Canvas for the time graph -->
                    <canvas id='timeline' height="60%"></canvas>
                </div>
                
                <!-- Chart comparing how many times users from both age groups selected each content category -->
                <div>
                    <h4>Number of times the category was selected by each age group</h4>

                    <!-- Canvas for the graph -->
                    <canvas id='cat_chart' height="60%"></canvas>
                </div>
                
                <!-- Script to draw the dashboard -->
                <script>

                    // get the clicks data from the database
                    var clicks = '<%- JSON.stringify(clicks) %>';
                    clicks = JSON.parse(clicks);

                    // get the number of underage users
                    var under = (clicks.filter(clicks => clicks.category == '18-'));
                    var under_no = Object.keys(under).length;

                    // get the number of adult users
                    var adults = (clicks.filter(clicks => clicks.category == '18+'));
                    var adults_no = Object.keys(adults).length;
                    
                    // Dashboard created using the chartjs library https://www.chartjs.org/docs/latest/
                    
                    // Create the age chart using the number of users from each age group data
                    var ctx = document.getElementById('age_chart').getContext('2d');
                    var age_chart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: ['Underage', 'Adults'],
                            // labels: xlabels,
                            datasets: [{
                                label: ['Underage'],
                                data: [under_no, adults_no],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                ],
                                borderColor: [
                                ],
                            },
                            {
                                label: ['Adults'],
                                backgroundColor: ['rgba(54, 162, 235, 0.2)'],
                            }]
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    gridLines: {
                                        color: "rgba(0, 0, 0, 0)",
                                    },
                                }],
                                yAxes: [{
                                    gridLines: {
                                        lineWidth: 0.1,
                                    },
                                    ticks: {
                                        stepSize: 20,
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                    

                    //Create the timeline of the visits for each age group


                    //helper function returning the array of days from the start of the year to the current date
                    function getDaysBetweenDates(startDate) {
                        let dates = [];
                        var end = new Date();
                        end.setDate(end.getDate() + 3);
                        var theDate = new Date(startDate);
                        while (theDate < end) {
                            var newDate = moment(theDate).format('YYYY-M-D');
                            dates.push(newDate);
                            theDate.setDate(theDate.getDate() + 1);
                        }
                        return dates;
                    }


                    //VARIABLES
                    // The click data had to be transformed to create the timeline
                    // under_td - array storing click events from underage users including the time and date data
                    //adults_td - array storing click events from adult users including the time and date data
                    //utd - uderage users clicks time data in a format compatible with the chartjs
                    //atd - adult users  clicks time data in a format compatible with the chartjs
                    //sutd - array with underage users clicks data sorted by date
                    //satd - array with adults users clicks data sorted by date
                    //daily_underage - daily cumulative data for underage group
                    //daily_adult - daily cummulative data for adult users
                    //x,y, temp, new_data - temporary variables to store data before passing them into new object
                    var under_td = [];
                    var adults_td = [];
                    var utd = [];
                    var sutd = [];
                    var satd = [];
                    var atd = [];
                    var daily_underage = [];
                    var daily_adult = [];
                    var new_data;
                    var temp;
                    var x;
                    var y;

                    // var current_date=  moment((new Date()).valueOf());
                    var start_of_year = moment().startOf('year').format('YYYY-M-D');
                    var date_arr = getDaysBetweenDates(start_of_year);

                    


                    //sort the click events by date in each age group
                    sutd = under.sort((a, b) => moment(a.createdAt).format('YYYYMMDD') - moment(b.createdAt).format('YYYYMMDD'));
                    satd = adults.sort((a, b) => moment(a.createdAt).format('YYYYMMDD') - moment(b.createdAt).format('YYYYMMDD'));


                    //change the format of the time/date data in the underage group and drop unnecesarry features from the click data
                    for (var i = 0; i < under_no; i++) {
                        x = moment(sutd[i].createdAt).format("YYYY-M-D");
                        y = sutd[i]._id;
                        new_data = { x, y }
                        under_td.push(new_data);
                    }

                    //change the format of the time/date data in the adult group and drop unnecesarry features from the click data
                    for (var i = 0; i < adults_no; i++) {
                        x = moment(satd[i].createdAt).format("YYYY-M-D");
                        y = satd[i]._id;
                        // new_data = { x, y }
                        adults_td.push({ x, y });
                    }


                    //change the format of data to one compatible with chartjs timeline
                    let under_counter = {}
                    under_td.forEach(function (obj) {
                        var key = obj.x
                        under_counter[key] = (under_counter[key] || 0) + 1
                    })
                    for (const [key, value] of Object.entries(under_counter)) {
                        x = key;
                        x = moment(x).format('YYYY-M-D');
                        y = value;
                        new_data = { x, y };
                        utd.push(new_data);
                    }


                    //change the format of data to one compatible with chartjs timeline
                    let adults_counter = {}
                    adults_td.forEach(function (obj) {
                        var key = obj.x
                        adults_counter[key] = (adults_counter[key] || 0) + 1
                    })
                    for (const [key, value] of Object.entries(adults_counter)) {
                        x = key;
                        x = moment(x).format('YYYY-M-D');
                        y = value;
                        // new_data = {x, y};
                        atd.push({ x, y });
                    }
                    

                    //create the daily data for the underage group
                    for (var i = 0; i < date_arr.length; i++) {
                        temp = { x: date_arr[i], y: 0 };
                        utd.forEach(function (obj) {
                            if (obj.x === date_arr[i]) {
                                temp.y = obj.y;
                            }
                        });
                        daily_underage.push(temp);
                    }

                    //create the daily data for the adult group
                    for (var i = 0; i < date_arr.length; i++) {
                        temp = { x: date_arr[i], y: 0 };
                        atd.forEach(function (obj) {
                            if (obj.x === date_arr[i]) {
                                temp.y = obj.y;
                            }
                        });
                        daily_adult.push(temp);
                    }

                    //sort the daily data
                    var daily_underage_sorted = daily_underage.sort((a, b) => moment(a.x).format('YYYYMMDD') - moment(b.x).format('YYYYMMDD'));
                    var daily_adult_sorted = daily_adult.sort((a, b) => moment(a.x).format('YYYYMMDD') - moment(b.x).format('YYYYMMDD'));


                    // Timeline parameters
                    // https://www.chartjs.org/docs/latest/
                    var canva = document.getElementById('timeline');
                    var graphParams = {
                        type: "line",
                        data: {

                            datasets: [
                                {
                                    pointRadius: 2,
                                    label: "Underage",
                                    spanGaps: false,
                                    data: daily_underage_sorted,
                                    borderColor: 'rgba(255, 99, 132, 0.2)',
                                    backgroundColor: 'transparent',
                                },
                                {
                                    pointRadius: 2,
                                    label: "Adults",
                                    spanGaps: false,
                                    data: daily_adult_sorted,
                                    borderColor: 'rgba(54, 162, 235, 0.2)',
                                    backgroundColor: 'transparent',
                                }],
                        },
                        options: {
                            showLines: true,
                            distribution: 'series',
                            bounds: 'ticks',
                            scales: {
                                xAxes: [{
                                    gridLines: {
                                        lineWidth: 0.1,
                                    },
                                    type: 'time',
                                    time: {
                                        unit: 'day'
                                    },
                                    distribution: 'series',
                                }],
                                yAxes: [{
                                    gridLines: {
                                        lineWidth: 0.1,
                                    },
                                    ticks: {
                                        stepSize: 20,
                                        min: 0,
                                        suggestedMax: 80,
                                        source: 'auto',
                                    }
                                }]
                            }
                        }
                    }

                    // Draw the timeline
                    ctx2 = new Chart(canva, graphParams);
             

                    // CATEGORY BY AGE CHART

                    // cat_names - names of the categories of the clicks
                    var cat_names = [];

                    //create the list of all the categories of the content
                    for (var i = 0; i < Object.keys(clicks).length; i++) {
                        if ((clicks[i].category != '18-') && (clicks[i].category != '18+')) {
                            if (!(cat_names.includes(clicks[i].category))) {
                                cat_names.push(clicks[i].category);
                            }
                        }
                    }

                    //array to store number of clicks for each category for each age group
                    var underage_clicks = [];
                    var adult_clicks = [];

                    //get the number of clicks for each category for each age group 
                    for (var i = 0; i < cat_names.length; i++) {
                        var ud = (clicks.filter(clicks => (clicks.category == cat_names[i]) && clicks.is_adult == false));
                        var udn = Object.keys(ud).length;
                        var ad = (clicks.filter(clicks => (clicks.category == cat_names[i]) && clicks.is_adult == true));
                        var adn = Object.keys(ad).length;
                        underage_clicks.push(udn);
                        adult_clicks.push(adn);
                    }


                    //Set up the AGE/CATEGORY chart
                    // https://www.chartjs.org/docs/latest/
                    var ctx3 = document.getElementById('cat_chart').getContext('2d');
                    // const xlabels = [];
                    var cat_chart = new Chart(ctx3, {
                        type: 'bar',
                        data: {
                            labels: [cat_names[0], cat_names[1], cat_names[2], cat_names[3], cat_names[4], cat_names[5], cat_names[6], cat_names[7]],
                            // labels: xlabels,
                            datasets: [
                                {
                                    label: "Underage",
                                    borderColor: 'rgba(255, 99, 132, 0.2)',
                                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                    data: [underage_clicks[0], underage_clicks[1], underage_clicks[2], underage_clicks[3], underage_clicks[4], underage_clicks[5], underage_clicks[6], underage_clicks[7], underage_clicks[8]],
                                },
                                {
                                    label: "Adults",
                                    borderColor: 'rgba(54, 162, 235, 0.2)',
                                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                    data: [adult_clicks[0], adult_clicks[1], adult_clicks[2], adult_clicks[3], adult_clicks[4], adult_clicks[5], adult_clicks[6], adult_clicks[7], adult_clicks[8]],
                                }
                            ]
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    gridLines: {
                                        color: "rgba(0, 0, 0, 0)",
                                    },
                                }],
                                yAxes: [{
                                    gridLines: {
                                        lineWidth: 0.1,
                                    },
                                    ticks: {
                                        stepSize: 10,
                                        min: 0,
                                        suggestedMax: 30,
                                    }
                                }]
                            }
                        }
                    });
                </script>

                </div>
                </div>

                <!-- include bootstrap scripts -->
                <%- include('../partials/footer_admin.ejs') %>


        </body>

        </html>